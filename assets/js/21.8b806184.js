(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{367:function(s,e,a){"use strict";a.r(e);var r=a(43),t=Object(r.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[s._v("#")]),s._v(" 算法")]),s._v(" "),a("h2",{attrs:{id:"louds-rs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#louds-rs"}},[s._v("#")]),s._v(" louds-rs")]),s._v(" "),a("p",[s._v("High performance LOUDS (Level-Order Unary Degree Sequence) library.")]),s._v(" "),a("p",[s._v("https://github.com/laysakura/louds-rs")]),s._v(" "),a("h2",{attrs:{id:"fid-rs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fid-rs"}},[s._v("#")]),s._v(" fid-rs")]),s._v(" "),a("p",[s._v("High performance FID (Fully Indexable Dictionary) library.")]),s._v(" "),a("p",[s._v("https://github.com/laysakura/fid-rs")]),s._v(" "),a("h2",{attrs:{id:"simdjson"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simdjson"}},[s._v("#")]),s._v(" simdjson")]),s._v(" "),a("p",[s._v("JSON is everywhere on the Internet. Servers spend a "),a("em",[s._v("lot")]),s._v(" of time parsing it. We need a fresh approach. The simdjson library uses commonly available SIMD instructions and microparallel algorithms to parse JSON 2.5x faster than anything else out there.")]),s._v(" "),a("ul",[a("li",[s._v("Fast: Over 2.5x faster than other production-grade JSON parsers.")]),s._v(" "),a("li",[s._v("Easy: First-class, easy to use API.")]),s._v(" "),a("li",[s._v("Strict: Full JSON and UTF-8 validation, lossless parsing. Performance with no compromises.")]),s._v(" "),a("li",[s._v("Automatic: Selects a CPU-tailored parser at runtime. No configuration needed.")]),s._v(" "),a("li",[s._v("Reliable: From memory allocation to error handling, simdjson's design avoids surprises.\nThis library is part of the Awesome Modern C++ list.")])]),s._v(" "),a("p",[s._v("https://github.com/simdjson/simdjson")]),s._v(" "),a("h2",{attrs:{id:"libsigsegv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#libsigsegv"}},[s._v("#")]),s._v(" libsigsegv")]),s._v(" "),a("p",[s._v("GNU libsigsegv is a library for handling page faults in user mode. A page fault occurs when a program tries to access to a region of memory that is currently not available. Catching and handling a page fault is a useful technique for implementing:")]),s._v(" "),a("ul",[a("li",[s._v("pageable virtual memory,")]),s._v(" "),a("li",[a("strong",[s._v("memory-mapped access to persistent databases")]),s._v(",")]),s._v(" "),a("li",[s._v("generational garbage collectors,")]),s._v(" "),a("li",[s._v("stack overflow handlers,")]),s._v(" "),a("li",[s._v("distributed shared memory")])]),s._v(" "),a("p",[s._v("http://www.gnu.org/software/libsigsegv/")])])}),[],!1,null,null,null);e.default=t.exports}}]);