(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{369:function(_,v,t){"use strict";t.r(v);var a=t(43),s=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"硬盘原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#硬盘原理"}},[_._v("#")]),_._v(" 硬盘原理")]),_._v(" "),t("h2",{attrs:{id:"_1-文件系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件系统"}},[_._v("#")]),_._v(" 1. 文件系统")]),_._v(" "),t("h3",{attrs:{id:"扇区和块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扇区和块"}},[_._v("#")]),_._v(" 扇区和块")]),_._v(" "),t("p",[_._v("物理层面：一个磁盘按层次分为 "),t("strong",[_._v("磁盘组合 -> 单个磁盘 -> 某一盘面 -> 某一磁道 -> 某一扇区")])]),_._v(" "),t("p",[_._v("扇区，顾名思义，每个磁盘有多条同心圆似的磁道，磁道被分割成多个部分。每部分的弧长加上到圆心的两个半径，恰好形成一个扇形，所以叫做扇区。"),t("strong",[_._v("扇区是磁盘中最小的物理存储单位。通常情况下每个扇区的大小是512字节。（由于不断提高磁盘的大小，部分厂商设定每个扇区的大小是4096字节）")])]),_._v(" "),t("p",[_._v("逻辑层面： 磁盘块（虚拟出来的）。 "),t("strong",[_._v("块是操作系统中最小的逻辑存储单位。操作系统与磁盘打交道的最小单位是磁盘块。")])]),_._v(" "),t("h3",{attrs:{id:"簇和块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#簇和块"}},[_._v("#")]),_._v(" 簇和块")]),_._v(" "),t("p",[_._v("通俗的来讲，在Windows下如NTFS等文件系统中叫做簇；在Linux下如Ext4等文件系统中叫做块（block）。每个簇或者块可以包括2、4、8、16、32、64…2的n次方个扇区。")]),_._v(" "),t("h3",{attrs:{id:"块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块"}},[_._v("#")]),_._v(" 块")]),_._v(" "),t("p",[_._v("块存在的价值是：")]),_._v(" "),t("ol",[t("li",[_._v("读取方便：由于扇区的数量比较小，数目众多在寻址时比较困难，所以操作系统就将相邻的扇区组合在一起，形成一个块，再对块进行整体的操作。")]),_._v(" "),t("li",[_._v("分离对底层的依赖：操作系统忽略对底层物理存储结构的设计。通过虚拟出来磁盘块的概念，在系统中认为块是最小的单位。")])]),_._v(" "),t("p",[t("strong",[_._v("磁盘控制器")]),_._v("，其作用除了读取数据、控制磁头等作用外，还有的功能就是"),t("strong",[_._v("映射扇区和磁盘块的关系")]),_._v("。")]),_._v(" "),t("p",[t("strong",[_._v("磁盘读写基本单位是扇区")]),_._v("。磁盘的原理，物理实现，"),t("strong",[_._v("磁盘控制器是按照扇区这个单位读取等操作数据的。操作系统是通过块簇来做为单位读取等操作数据的。")])]),_._v(" "),t("p",[_._v("文件系统就是操作系统的一部分，所以文件系统操作文件的最小单位是块。")]),_._v(" "),t("p",[_._v("既然磁盘块是一个虚拟概念。是操作系统自己＂杜撰＂的。软件的概念，不是真实的。所以大小由操作系统决定，操作系统可以配置一个块多大。")]),_._v(" "),t("p",[_._v("**一个块大小=一个扇区大小*2的n次方。**N是可以修改的。")]),_._v(" "),t("h3",{attrs:{id:"块与页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#块与页"}},[_._v("#")]),_._v(" 块与页")]),_._v(" "),t("p",[_._v("操作系统经常与内存和硬盘这两种存储设备进行通信，类似于“块”的概念，都需要一种虚拟的基本单位。所以，"),t("strong",[_._v("与内存操作，是虚拟一个页的概念来作为最小单位。")])]),_._v(" "),t("p",[t("strong",[_._v("与硬盘打交道，就是以块为最小单位。")])]),_._v(" "),t("h2",{attrs:{id:"_2-硬盘结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-硬盘结构"}},[_._v("#")]),_._v(" 2. 硬盘结构")]),_._v(" "),t("h3",{attrs:{id:"硬盘的组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#硬盘的组成"}},[_._v("#")]),_._v(" 硬盘的组成")]),_._v(" "),t("p",[_._v("一般来说硬盘都是由盘片、磁头、盘片主轴、控制电机、磁头控制器、数据转换器、接口、缓存等几个部份组成。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/disk-composite.png",alt:"disk"}})]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/disk-composite-2.jpeg",alt:"disk2"}})]),_._v(" "),t("p",[_._v("所有的盘片都固定在一个旋转轴上，这个轴即盘片主轴。而所有盘片之间是绝对平行的，在每个盘片的存储面上都有一个磁头，磁头与盘片之间的距离比头发丝的直径还小。所有的磁头连在一个磁头控制器上，由磁头控制器负责各个磁头的运动。磁头可沿盘片的半径方向动作，（实际是斜切向运动），每个磁头同一时刻也必须是同轴的，即从正上方向下看，所有磁头任何时候都是重叠的（不过目前已经有多磁头独立技术，可不受此限制）。而盘片以每分钟数千转到上万转的速度在高速旋转，这样磁头就能对盘片上的指定位置进行数据的读写操作。")]),_._v(" "),t("h3",{attrs:{id:"硬盘工作原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#硬盘工作原理"}},[_._v("#")]),_._v(" 硬盘工作原理")]),_._v(" "),t("p",[_._v("硬盘在逻辑上被划分为磁道、柱面以及扇区。硬盘的每个盘片的每个面都有一个读写磁头，磁盘盘面区域的划分如图所示：")]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/disk-principle.png",alt:"disk3"}})]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/disk-principle-2.jpeg",alt:"disk4"}})]),_._v(" "),t("p",[_._v("磁头靠近主轴接触的表面，即线速度最小的地方，是一个特殊的区域，它不存放任何数据，称为启停区或着陆区（LandingZone），启停区外就是数据区。在最外圈，离主轴最远的地方是“0”磁道，硬盘数据的存放就是从最外圈开始的。那么，磁头是如何找到“0”磁道的位置的 呢？在硬盘中还有一个叫“0”磁道检测器的构件，它是用来完成硬盘的初始定位。“0”磁道是如此的重要，以致很多硬盘仅仅因为“0”磁道损坏就报废，这是 非常可惜的。")]),_._v(" "),t("p",[_._v("早期的硬盘在每次关机之前需要运行一个被称为Parking的程序，其作用是让磁头回到启停区。现代硬盘在设计上已摒弃了这个虽不复杂却很让人不愉快的小缺陷。硬盘不工作时，磁头停留在启停区，当需要从硬盘读写数据时，磁盘开始旋转。旋转速度达到额定的高速时，磁头就会因盘片旋转产生的气流而抬起， 这时磁头才向盘片存放数据的区域移动。")]),_._v(" "),t("p",[_._v("盘片旋转产生的气流相当强，足以使磁头托起，并与盘面保持一个微小的距离。这个距离越小，磁头读写数据的灵敏度就越高，当然对硬盘各部件的要求也越 高。早期设计的磁盘驱动器使磁头保持在盘面上方几微米处飞行。稍后一些设计使磁头在盘面上的飞行高度降到约0.1μm～0.5μm，现在的水平已经达到 0.005μm～0.01μm，这只是人类头发直径的千分之一。")]),_._v(" "),t("p",[_._v("气流既能使磁头脱离开盘面，又能使它保持在离盘面足够近的地方，非常紧密地跟随着磁盘表面呈起伏运动，使磁头飞行处于严格受控状态。磁头必须飞行在盘面上方，而不是接触盘面，这种位置可避免擦伤磁性涂层，而更重要的是不让磁性涂层损伤磁头。\n但是，磁头也不能离盘面太远，否则，就不能使盘面达到足够强的磁化，难以读出盘上的磁化翻转（磁极转换形式，是磁盘上实际记录数据的方式）。")]),_._v(" "),t("p",[_._v("硬盘驱动器磁头的飞行悬浮高度低、速度快，一旦有小的尘埃进入硬盘密封腔内，或者一旦磁头与盘体发生碰撞，就可能造成数据丢失，形成坏块，甚至造成 磁头和盘体的损坏。所以，硬盘系统的密封一定要可靠，在非专业条件下绝对不能开启硬盘密封腔，否则，灰尘进入后会加速硬盘的损坏。另外，硬盘驱动器磁头的寻道伺服电机多采用音圈式旋转或直线运动步进电机，在伺服跟踪的调节下精确地跟踪盘片的磁道，所以，硬盘工作时不要有冲击碰撞，搬动时要小心轻放。")]),_._v(" "),t("p",[_._v("这种硬盘就是采用温彻斯特（Winchester）技术制造的硬盘，所以也被称为温盘，目前绝大多数硬盘都采用此技术。")]),_._v(" "),t("h3",{attrs:{id:"盘面、磁道、柱道、扇区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#盘面、磁道、柱道、扇区"}},[_._v("#")]),_._v(" 盘面、磁道、柱道、扇区")]),_._v(" "),t("p",[_._v("硬盘的读写是和扇区有着紧密关系的。在说扇区和读写原理之前先说一下和扇区相关的”盘面”、“磁道”、和“柱面”。")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("盘面\n硬盘的盘片一般用铝合金材料做基片，高速硬盘也可能用玻璃做基片。硬盘的每一个盘片都有两个盘面（Side），即上、下盘面，一般每个盘面都会利用，都可以存储数据，成为有效盘片，也有极个别的硬盘盘面数为单数。每一个这样的有效盘面都有一个盘面号，按顺序从上至下从“0”开始依次编号。在硬盘系统中，盘面号又叫磁头号，因为每一个有效盘面都有一个对应的读写磁头。硬盘的盘片组在2～14片不等，通常有2～3个盘片，故盘面号（磁头号）为0～3或 0～5。")])]),_._v(" "),t("li",[t("p",[_._v("磁道\n磁盘在格式化时被划分成许多同心圆，这些同心圆轨迹叫做磁道（Track）。磁道从外向内从0开始顺序编号。硬盘的每一个盘面有300～1 024个磁道，新式大容量硬盘每面的磁道数更多。信息以脉冲串的形式记录在这些轨迹中，这些同心圆不是连续记录数据，而是被划分成一段段的圆弧，这些圆弧的角速度一样。由于径向长度不一样，所以，线速度也不一样，外圈的线速度较内圈的线速度大，即同样的转速下，外圈在同样时间段里，划过的圆弧长度要比内圈 划过的圆弧长度大。每段圆弧叫做一个扇区，扇区从“1”开始编号，每个扇区中的数据作为一个单元同时读出或写入。一个标准的3.5寸硬盘盘面通常有几百到几千条磁道。磁道是“看”不见的，只是盘面上以特殊形式磁化了的一些磁化区，在磁盘格式化时就已规划完毕。")])]),_._v(" "),t("li",[t("p",[_._v("柱面\n所有盘面上的同一磁道构成一个圆柱，通常称做柱面（Cylinder），每个圆柱上的磁头由上而下从“0”开始编号。数据的读/写按柱面进行，即磁 头读/写数据时首先在同一柱面内从“0”磁头开始进行操作，依次向下在同一柱面的不同盘面即磁头上进行操作，只在同一柱面所有的磁头全部读/写完毕后磁头 才转移到下一柱面（同心圆的再往里的柱面），因为选取磁头只需通过电子切换即可，而选取柱面则必须通过机械切换。电子切换相当快，比在机械上磁头向邻近磁道移动快得多，所以，数据的读/写按柱面进行，而不按盘面进行。也就是说，一个磁道写满数据后，就在同一柱面的下一个盘面来写，一个柱面写满后，才移到下一个扇区开始写数据。读数据也按照这种方式进行，这样就提高了硬盘的读/写效率。\n一块硬盘驱动器的圆柱数（或每个盘面的磁道数）既取决于每条磁道的宽窄（同样，也与磁头的大小有关），也取决于定位机构所决定的磁道间步距的大小。")])]),_._v(" "),t("li",[t("p",[_._v("扇区\n操作系统以扇区（Sector）形式将信息存储在硬盘上，每个扇区包括512个字节的数据和一些其他信息。\n一个扇区有两个主要部分：存储数据地点的标识符和存储数据的数据段。扇区的第一个主要部分是标识符。标识符，就是扇区头标，包括组成扇区三维地址的三个数字：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[_._v("盘面号：扇区所在的磁头（或盘面）\n\n柱面号：磁道，确定磁头的径向方向。\n\n扇区号：在磁道上的位置。也叫块号。确定了数据在盘片圆圈上的位置。\n")])])]),t("p",[_._v("头标中还包括一个字段，其中有显示扇区是否能可靠存储数据，或者是否已发现某个故障因而不宜使用的标记。有些硬盘控制器在扇区头标中还记录有指示字，可在原扇区出错时指引磁盘转到替换扇区或磁道。最后，扇区头标以循环冗余校验（CRC）值作为结束，以供控制器检验扇区头标的读出情况，确保准确无误。")]),_._v(" "),t("p",[_._v("扇区的第二个主要部分是存储数据的数据段，可分为数据和保护数据的纠错码（ECC）。在初始准备期间，计算机用512个虚拟信息字节（实际数据的存放地）和与这些虚拟信息字节相应的ECC数字填入这个部分。")])]),_._v(" "),t("li",[t("p",[_._v("访盘请求完成过程 ：")]),_._v(" "),t("p",[_._v("确定磁盘地址（柱面号，磁头号，扇区号），内存地址（源/目）：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[_._v("   当需要从磁盘读取数据时，系统会将数据逻辑地址传给磁盘，磁盘的控制电路按照寻址逻辑将逻辑地址翻译成物理地址，即确定要读的数据在哪个磁道，哪个扇区。\n")])])]),t("p",[_._v("为了读取这个扇区的数据，需要将磁头放到这个扇区上方，为了实现这一点：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[_._v("   1）首先必须找到柱面，即磁头需要移动对准相应磁道，这个过程叫做寻道，所耗费时间叫做寻道时间，\n\n   2）然后目标扇区旋转到磁头下，即磁盘旋转将目标扇区旋转到磁头下。这个过程耗费的时间叫做旋转时间。\n")])])]),t("p",[_._v("即一次访盘请求（读/写）完成过程由三个动作组成：\n1）寻道（时间）：磁头移动定位到指定磁道\n2）旋转延迟（时间）：等待指定扇区从磁头下旋转经过\n3）数据传输（时间）：数据在磁盘与内存之间的实际传输")]),_._v(" "),t("p",[_._v("因此在磁盘上读取扇区数据（一块数据）所需时间：")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[_._v("  Ti/o=tseek +tla + n *twm\n")])])]),t("p",[_._v("其中:")]),_._v(" "),t("p",[_._v("tseek 为寻道时间")]),_._v(" "),t("p",[_._v("tla为旋转时间")]),_._v(" "),t("p",[_._v("twm 为传输时间")])])]),_._v(" "),t("h3",{attrs:{id:"磁盘读写原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#磁盘读写原理"}},[_._v("#")]),_._v(" 磁盘读写原理")]),_._v(" "),t("p",[_._v("系统将文件存储到磁盘上时，按柱面、磁头、扇区的方式进行，即最先是第1磁道的第一磁头下（也就是第1盘面的第一磁道）的所有扇区，然后，是同一柱面的下一磁头，……，一个柱面存储满后就推进到下一个柱面，直到把文件内容全部写入磁盘。（文件的记录在同一盘组上存放时，应先集中放在一个柱面上，然后再顺序存放在相邻的柱面上，对应同一柱面，则应该按盘面的次序顺序存放。）")]),_._v(" "),t("p",[t("strong",[_._v("从上到下，然后从外到内。数据的读/写按柱面进行，而不按盘面进行")])]),_._v(" "),t("p",[_._v("系统也以相同的顺序读出数据。读出数据时通过告诉磁盘控制器要读出扇区所在的柱面号、磁头号和扇区号（物理地址的三个组成部分）进行。磁盘控制器则 直接使磁头部件步进到相应的柱面，选通相应的磁头，等待要求的扇区移动到磁头下。在扇区到来时，磁盘控制器读出每个扇区的头标，把这些头标中的地址信息与期待检出的磁头和柱面号做比较（即寻道），然后寻找要求的扇区号。待磁盘控制器找到该扇区头标时，根据其任务是写扇区还是读扇区，来决定是转换写电路， 还是读出数据和尾部记录。找到扇区后，磁盘控制器必须在继续寻找下一个扇区之前对该扇区的信息进行后处理。如果是读数据，控制器计算此数据的ECC码，然 后，把ECC码与已记录的ECC码相比较。如果是写数据，控制器计算出此数据的ECC码，与数据一起存储。在控制器对此扇区中的数据进行必要处理期间，磁盘继续旋转。")]),_._v(" "),t("h3",{attrs:{id:"局部性原理与磁盘预读"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#局部性原理与磁盘预读"}},[_._v("#")]),_._v(" 局部性原理与磁盘预读")]),_._v(" "),t("p",[_._v("由于存储介质的特性，磁盘本身存取就比主存慢很多，再加上机械运动耗费，磁盘的存取速度往往是主存的几百分分之一，因此为了提高效率，要尽量减少磁盘I/O。为了达到这个目的，磁盘往往不是严格按需读取，而是每次都会预读，即使只需要一个字节，磁盘也会从这个位置开始，顺序向后读取一定长度的数据放入内存。这样做的理论依据是计算机科学中著名的局部性原理：")]),_._v(" "),t("p",[_._v("当一个数据被用到时，其附近的数据也通常会马上被使用。")]),_._v(" "),t("p",[_._v("程序运行期间所需要的数据通常比较集中。")]),_._v(" "),t("p",[_._v("由于磁盘顺序读取的效率很高（不需要寻道时间，只需很少的旋转时间），因此对于具有局部性的程序来说，预读可以提高I/O效率。")]),_._v(" "),t("p",[_._v("预读的长度一般为页（page）的整倍数。页是计算机管理存储器的逻辑块，硬件及操作系统往往将主存和磁盘存储区分割为连续的大小相等的块，每个存储块称为一页（在许多操作系统中，页得大小通常为4k），主存和磁盘以页为单位交换数据。当程序要读取的数据不在主存中时，会触发一个缺页异常，此时系统会向磁盘发出读盘信号，磁盘会找到数据的起始位置并向后连续读取一页或几页载入内存中，然后异常返回，程序继续运行。")]),_._v(" "),t("h2",{attrs:{id:"_3-4k硬盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4k硬盘"}},[_._v("#")]),_._v(" 3. 4K硬盘")]),_._v(" "),t("h3",{attrs:{id:"_512字节扇区硬盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_512字节扇区硬盘"}},[_._v("#")]),_._v(" 512字节扇区硬盘")]),_._v(" "),t("p",[_._v("传统硬盘以512B为一个扇区，扇区之间并不直接相连，他们之间还存在一定的空间，分为空隙（gap，用来分割扇区），同步（sync，表示扇区的开始处，并提供计时对齐），地址标志（Address Mark，识别扇区号和位置的数据。还可提供扇区本身的状态。），以及用户数据修复和还原的ECC区域。")]),_._v(" "),t("p",[_._v("下图是打开的512扇区磁盘的结构图。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/sector-512-layout.jpeg",alt:"sector512"}})]),_._v(" "),t("p",[_._v("可想而知，这种结构的缺点，随着单盘容量的增加，是不是ECC校验的效率变低了？并且扇区之间有如此多的空间，浪费了很多硬盘空间。")]),_._v(" "),t("p",[_._v("512字节的扇区需要另外40字节作为ECC校验空间，而4k扇区（8个512字节扇区）只需要100个字节，所以，同样提供4kbyte扇区空间，使用高级格式化磁盘能节约出220byte的储存空间，这样就能令ECC校验完成更多空间的检验纠错，提高ECC校验的效率。")]),_._v(" "),t("h3",{attrs:{id:"_4k硬盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4k硬盘"}},[_._v("#")]),_._v(" 4K硬盘")]),_._v(" "),t("p",[t("strong",[_._v("简而言之，4K 硬盘是扇区大小为 将以前512个字节就有一段不可用的空间，变成了4096个字节")]),_._v("。")]),_._v(" "),t("p",[_._v("这种硬盘结构将缩小扇区之间的差距，大大的提高了硬盘空间的使用率。下图显示了 4K 硬盘的结构和512磁盘的对比图：")]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/sector-4k-layout.jpeg",alt:"sector4k"}})]),_._v(" "),t("h3",{attrs:{id:"_512模拟硬盘和4k原生硬盘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_512模拟硬盘和4k原生硬盘"}},[_._v("#")]),_._v(" 512模拟硬盘和4K原生硬盘")]),_._v(" "),t("p",[_._v("考虑到操作系统兼容性，出现了512模拟（512e）硬盘，物理扇区大小为 4096 字节，但逻辑扇区大小为 512 字节。站在操作系统角度来看，还是认为该磁盘是传统的512字节大小，使用上和以前并没有区别。")]),_._v(" "),t("p",[_._v("4K 原生硬盘也称为 4Kn 硬盘。512 模拟硬盘和 4Kn 硬盘均为 4K 驱动器，因为它们的物理扇区大小为 4096 （4K） 字节。但是，对于在 4K 本机模式下工作的硬盘，没有仿真层，磁盘介质会直接向系统固件和操作系统公开其 4096、4112、4160 或 4224 字节的物理扇区大小。")]),_._v(" "),t("p",[_._v("下图是 512n、512e 和 4Kn 的比较。")]),_._v(" "),t("p",[t("img",{attrs:{src:"/image/sector-compare.jpeg",alt:"compare"}})]),_._v(" "),t("h1",{attrs:{id:"_4-随机读写指标"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-随机读写指标"}},[_._v("#")]),_._v(" 4 随机读写指标")]),_._v(" "),t("p",[_._v("根据Ti/o=tseek +tla + n *twm")]),_._v(" "),t("blockquote",[t("p",[_._v("查下表：")]),_._v(" "),t("p",[_._v("tseek = 8.0  read，寻道（时间），磁头移动定位到指定磁道 （https://tech.meituan.com/2017/05/19/about-desk-io.html 中描述为3-15ms）")]),_._v(" "),t("p",[_._v("tla = 4.16  旋转延迟（时间），等待指定扇区从磁头下旋转经过 （上文中描述为4.17ms）")]),_._v(" "),t("p",[_._v("twm 指完成传输所请求的数据所需要的时间，它取决于数据传输率，其值等于数据大小除以数据传输率。目前IDE/ATA能达到133MB/s，SATA II可达到300MB/s的接口数据传输率，数据传输时间通常远小于前两部分消耗时间。简单计算时可忽略，但IO次数多时不可不考虑，例如：200KB大小的图片，传输时间=200KB/150MB=1.3ms。(150MB是取外圈传输速率260MB的一半+20MB的估计值)")])]),_._v(" "),t("p",[_._v("完成一次随机读，至少需用时：")]),_._v(" "),t("p",[_._v("12ms - 13ms")]),_._v(" "),t("p",[_._v("12T企业级硬盘若干指标说明")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("指标")]),_._v(" "),t("th",[_._v("数值")]),_._v(" "),t("th",[_._v("说明")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("平均故障间隔时间(MTBF，小时)")]),_._v(" "),t("td",[_._v("2,500,000")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[_._v("24×7 不间断运行的可靠性级别 (AFR)")]),_._v(" "),t("td",[_._v("0.35%")]),_._v(" "),t("td",[_._v("按2500000小时/24小时/365天=285年，1/285=0.35%")])]),_._v(" "),t("tr",[t("td",[_._v("不可恢复错误/被读数据(位)")]),_._v(" "),t("td",[_._v("1 扇区/10E15")]),_._v(" "),t("td",[_._v("读取10E15个bit，可能出现一个不可恢复的错误；10E15字节=110TB")])]),_._v(" "),t("tr",[t("td",[_._v("每年运行小时数 (24×7)")]),_._v(" "),t("td",[_._v("8,760")]),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[_._v("接口访问速度(Gb/秒)")]),_._v(" "),t("td",[_._v("6.0, 3.0")]),_._v(" "),t("td",[_._v("SATA3.0是6Gbps；SATA2.0是3Gbps；这个数字用处不大。")])]),_._v(" "),t("tr",[t("td",[_._v("最大持续数据传输率 OD (MB/秒，MiB/秒)")]),_._v(" "),t("td",[_._v("最高达 261, 249")]),_._v(" "),t("td",[_._v("OD：外部磁道。由于现代磁盘有恒定的角速度，所以外部磁道读写速度比内部快。根据实际测试，发现7200转速的硬盘，顺序写入能达到200MB，顺序读能达到150MB，都比261MB,249MB小一些。")])]),_._v(" "),t("tr",[t("td",[_._v("随机读取/写入 4K QD16 WCD (IOPS)")]),_._v(" "),t("td",[_._v("170/400")]),_._v(" "),t("td",[_._v("-QD16：队列深度16，描述了并发向磁盘发出多少请求"),t("br"),_._v("- 4K：读写请求的大小，一般操作系统块大小为4KB "),t("br"),_._v("- WCD：写入缓存已禁用。它是一种禁用磁盘DRAM回写缓存以增强数据安全性的方法，注意如果WCD设置了，没有NVC (非易失性缓存)的hDDs将具有更低的随机写入性能，另一方面，具有NVC的hDD通常具有与完全启用的写回缓存类似的性能。")])]),_._v(" "),t("tr",[t("td"),_._v(" "),t("td"),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td",[_._v("Seek time6 (read/write, ms, typical)")]),_._v(" "),t("td",[_._v("8.0, 8.6")]),_._v(" "),t("td",[_._v("寻道时间，10K转速盘一般是5ms")])]),_._v(" "),t("tr",[t("td",[_._v("平均延迟(毫秒)  / Latency average (ms)")]),_._v(" "),t("td",[_._v("4.16")]),_._v(" "),t("td",[_._v("旋转半圈用的时间，也可以认为是寻道之后的平均旋转时间，60秒/(7200转/60秒)*(1/2)=4.16")])]),_._v(" "),t("tr",[t("td"),_._v(" "),t("td"),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td"),_._v(" "),t("td"),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td"),_._v(" "),t("td"),_._v(" "),t("td")]),_._v(" "),t("tr",[t("td"),_._v(" "),t("td"),_._v(" "),t("td")])])])])}),[],!1,null,null,null);v.default=s.exports}}]);